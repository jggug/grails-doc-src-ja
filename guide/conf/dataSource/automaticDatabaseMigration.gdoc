{hidden}The @dbCreate@ property of the @DataSource@ definition is important as it dictates what Grails should do at runtime with regards to automatically generating the database tables from [GORM|guide:GORM] classes. The options are described in the [DataSource|guide:dataSource] section:{hidden}
@DataSource@定義の@dbCreate@プロパティは、Grailsが実行時に[GORM|guide:GORM]のクラスから自動的にデータベーステーブルを生成すべきかを指示する重要なプロパティです。以下のオプションは[DataSource|guide:dataSource]のセクションで説明しています。

* @create@
* @create-drop@
* @update@
* @validate@
* no value

{hidden}In [development|guide:environments] mode @dbCreate@ is by default set to "create-drop", but at some point in development (and certainly once you go to production) you'll need to stop dropping and re-creating the database every time you start up your server.{hidden}
[development|guide:environments]モードでは、@dbCreate@はデフォルト値が"create-drop"で設定されていますが、開発中（もしくは本番以前）では、サーバの起動ごとにデータベースが削除、再作成されることが不都合な場合があります。

{hidden}It's tempting to switch to @update@ so you retain existing data and only update the schema when your code changes, but Hibernate's update support is very conservative. It won't make any changes that could result in data loss, and doesn't detect renamed columns or tables, so you'll be left with the old one and will also have the new one.{hidden}
コードを変更したときに、既存データを維持したままスキーマだけを更新するため@update@に切り替えたくなりますが、Hibernateの更新サポートはあまりパッとしません。データの損失につながる可能性のある変更をすることはありませんが、テーブルやカラム名の変更を見つけることができないので、古いテーブルやカラムは残されて新しいものも持つことになります。

{hidden}Grails supports migrations via the "Database Migration":http://grails.org/plugin/database-migration plugin which can be installed by declaring the plugin in @grails-app/conf/BuildConfig.groovy@:{hidden}
Grailsは"Database Migration":http://grails.org/plugin/database-migration を介してマイグレーションをサポートしています。それは@grails-app/conf/BuildConfig.groovy@に宣言することでプラグインとしてインストールすることができます。:

{code:java}
grails.project.dependency.resolution = {
    ...
    plugins {
        runtime "\:database-migration:1.3.1"
    }
}
{code}

{hidden}The plugin uses "Liquibase":http://www.liquibase.org/ and and provides access to all of its functionality, and also has support for GORM (for example generating a change set by comparing your domain classes to a database).{hidden}
このプラグインは"Liquibase":http://www.liquibase.org/ を使用しており、Liquibaseすべての機能へのアクセスを提供しています。また、GORMのサポートも提供しています（例えばドメインクラスとデータベースを比較しチェンジセットを生成します）。
