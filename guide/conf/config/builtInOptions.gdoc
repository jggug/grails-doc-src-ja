{hidden}
Grails has a set of core settings that are worth knowing about. Their defaults are suitable for most projects, but it's important to understand what they do because you may need one or more of them later.
{hidden}
Grailsには知っておくべき基本設定の一式があります。
それらのデフォルトは多くのプロジェクトに適していますが、後で設定が必要になった時のために、それが何の設定であるか理解しておくことが重要です。

{hidden}
h3. Build settings
{hidden}
h3. ビルド設定

{hidden}
Let's start with some important build settings. Although Grails requires JDK 6 when developing your applications, it is possible to deploy those applications to JDK 5 containers. Simply set the following in @BuildConfig.groovy@:
{hidden}
いくつかの重要なビルド設定から始めましょう。
アプリケーションを開発するとき、GrailsはJDK 6を必要としますが、それらのアプリケーションをJDK 5で動作しているコンテナへデプロイすることが可能です。
単純に@BuildConfig.groovy@内で次のように設定します:

{code}
grails.project.source.level = "1.5"
grails.project.target.level = "1.5"
{code}

{hidden}
Note that source and target levels are different to the standard public version of JDKs, so JDK 5 -> 1.5, JDK 6 -> 1.6, and JDK 7 -> 1.7.
{hidden}
ただし、ソースとターゲットレベルはJDKの標準公開バージョンと異なり、JDK 5は1.5、JDK 6は1.6、そしてJDK 7は1.7となるようにしてください。

{hidden}
In addition, Grails supports Servlet versions 2.5 and above but defaults to 2.5. If you wish to use newer features of the Servlet API (such as 3.0 async support) you should configure the @grails.servlet.version@ setting appropriately:
{hidden}
加えて、Grailsはサーブレットバージョン2.5以上をサポートし、デフォルトは2.5です。
もし(3.0の非同期サポートのような)サーブレットAPIの新しい機能を使いたければ、@grails.servlet.version@を適切に設定します:

{code}
grails.servlet.version = "3.0"
{code}

{hidden}
h3. Runtime settings
{hidden}
h3. ランタイム設定

{hidden}
On the runtime front, i.e. @Config.groovy@, there are quite a few more core settings:
{hidden}
ランタイムフロント、すなわち@Config.groovy@には非常に多くのコアな設定があります:

{hidden}
* @grails.config.locations@  - The location of properties files or addition Grails Config files that should be merged with main configuration. See the [section on externalised config|guide:configExternalized].
* @grails.enable.native2ascii@ - Set this to false if you do not require native2ascii conversion of Grails i18n properties files (default: true).
* @grails.views.default.codec@ - Sets the default encoding regime for GSPs - can be one of 'none', 'html', or 'base64' (default: 'none'). To reduce risk of XSS attacks, set this to 'html'.
* @grails.views.gsp.encoding@ - The file encoding used for GSP source files (default: 'utf-8').
* @grails.mime.file.extensions@ - Whether to use the file extension to dictate the mime type in [Content Negotiation|guide:contentNegotiation] (default: true).
* @grails.mime.types@ - A map of supported mime types used for [Content Negotiation|guide:contentNegotiation].
* @grails.serverURL@ - A string specifying the server URL portion of absolute links, including server name e.g. grails.serverURL="http://my.yourportal.com". See [createLink|Tags]. Also used by redirects.
* @grails.views.gsp.sitemesh.preprocess@ - Determines whether SiteMesh preprocessing happens. Disabling this slows down page rendering, but if you need SiteMesh to parse the generated HTML from a GSP view then disabling it is the right option. Don't worry if you don't understand this advanced property: leave it set to true.
* @grails.reload.excludes@ and @grails.reload.includes@ - Configuring these directives determines the reload behavior for project specific source files. Each directive takes a list of strings that are the class names for project source files that should be excluded from reloading behavior or included accordingly when running the application in development with the @run-app@ command. If the @grails.reload.includes@ directive is configured, then only the classes in that list will be reloaded.
{hidden}
* @grails.config.locations@  - メイン設定にマージされるべきプロパティファイルや追加のGrails設定ファイルの場所です。[設定の外部化|guide:configExternalized]セクションを参照してください。
* @grails.enable.native2ascii@ - Grailsのi18nプロパティファイルのnative2ascii変換が必要ない場合はこれをfalseに設定します(デフォルト: true)。
* @grails.views.default.codec@ - GSPのデフォルトエンコーディング形式を設定します。'none'、'html'、または'base64'のいずれかを設定できます(デフォルト: none)。XSS攻撃によるリスクを減らすためには、これを'html'に設定します。
* @grails.views.gsp.encoding@ - GSPのソースファイルに使用するファイルエンコーディングです(デフォルト: 'utf-8')。
* @grails.mime.file.extensions@ - [コンテントネゴシエーション|guide:contentNegotiation]においてmime typeの判定にファイルの拡張子を使うかどうかです。(デフォルト: true)
* @grails.mime.types@ - [コンテントネゴシエーション|guide:contentNegotiation]で使う、サポートするMIMEタイプのマップです。
* @grails.serverURL@ - 絶対リンクのサーバURLの部分を指定する文字列です。grails.serverURL="http://my.yourportal.com"のようにサーバ名を含みます。[createLink|Tags]を参照してください。この設定はリダイレクトにも使われます。
* @grails.views.gsp.sitemesh.preprocess@ - SiteMeshプリプロセッシングさせるかどうかを決めます。これを無効にするとページのレンダリングが遅くなりますが、GSPビューから生成されたHTMLをパースするためにSiteMeshが必要であれば、無効にすることは正しい選択です。この上級者向けのプロパティを理解していなくても気にする必要はありません。trueのままにしておきましょう。
* @grails.reload.excludes@と@grails.reload.includes@ - このディレクティブの設定は、プロジェクト固有のソースファイルに対するリロードの挙動を決めます。それぞれのディレクティブは文字列のリストを取ります。この文字列は@run-app@コマンドを使って開発時にアプリケーションを動作させる際、リロード対象から除外または含めるべきプロジェクトのソースファイルのクラス名です。@grails.reload.includes@ディレクティブが設定されている場合、リストにあるクラスだけがリロードされます。

{hidden}
h3. War generation
{hidden}
h3. Warの生成

{hidden}
* @grails.project.war.file@ - Sets the name and location of the WAR file generated by the [war|commandLine] command
* @grails.war.dependencies@ - A closure containing Ant builder syntax or a list of JAR filenames. Lets you customise what libaries are included in the WAR file.
* @grails.war.copyToWebApp@ - A closure containing Ant builder syntax that is legal inside an Ant copy, for example "fileset()". Lets you control what gets included in the WAR file from the "web-app" directory.
* @grails.war.resources@ - A closure containing Ant builder syntax. Allows the application to do any other other work before building the final WAR file
{hidden}
* @grails.project.war.file@ - [war|commandLine]コマンドによって生成されるWARファイルの名前と場所を設定します。
* @grails.war.dependencies@ - Antビルダシンタックスを含むクロージャ、またはJARファイル名のリストです。WARファイルに含まれるライブラリをカスタマイズできます。
* @grails.war.copyToWebApp@ - "fileset()"等のAntコピーで定義されているAntビルダシンタックスを含むクロージャです。WARファイルに含めるために、"web-app"ディレクトリから何を取得するかを制御できます。
* @grails.war.resources@ - Antビルダシンタックスを含むクロージャです。最終的にWARファイルをビルドする前に、その他の作業を行うことをアプリケーションに許可します。

{hidden}
For more information on using these options, see the section on [deployment|guide:deployment]
{hidden}
これらのオプションの使用についての詳細は、[デプロイ|guide:deployment]セクションを参照してください。
