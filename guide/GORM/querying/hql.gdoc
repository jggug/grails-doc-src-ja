{hidden}GORM classes also support Hibernate's query language HQL, a very complete reference for which can be found [in the Hibernate documentation|http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/queryhql.html] of the Hibernate documentation.{hidden}
GORMのドメインクラスはHibernateのクエリ言語であるHQLもサポートしています。
HQLに関するとても充実したリファレンスが[Hibernateのドキュメント|http://docs.jboss.org/hibernate/core/3.6/reference/ja-JP/html/queryhql.html]にあります。

{hidden}GORM provides a number of methods that work with HQL including [find|domainClasses], [findAll|domainClasses] and [executeQuery|domainClasses]. An example of a query can be seen below:{hidden}
GORMは、[find|domainClasses]、[findAll|domainClasses]、そして[executeQuery|domainClasses]といった、HQLと連携するいくつかのメソッドを提供しています。
以下はクエリの使用例です:

{code:java}
def results =
      Book.findAll("from Book as b where b.title like 'Lord of the%'")
{code}

{hidden}h4. Positional and Named Parameters{hidden}
h4. 位置パラメータと名前付きパラメータ

{hidden}In this case the value passed to the query is hard coded, however you can equally use positional parameters:{hidden}
クエリへ値を渡す場合はハードコードになりますが位置パラメータが使えます:

{code:java}
def results =
      Book.findAll("from Book as b where b.title like ?", ["The Shi%"])

{code}

{code:java}
def author = Author.findByName("Stephen King")
def books = Book.findAll("from Book as book where book.author = ?",
                         [author])
{code}

{hidden}Or even named parameters:{hidden}
または、名前付きパラメータが使えます:

{code:java}
def results =
      Book.findAll("from Book as b " +
                   "where b.title like :search or b.author like :search",
                   [search: "The Shi%"])
{code}

{code:java}
def author = Author.findByName("Stephen King")
def books = Book.findAll("from Book as book where book.author = :author",
                         [author: author])
{code}

{hidden}h4. Multiline Queries{hidden}
h4. 複数行のクエリ

{hidden}Use the line continuation character to separate the query across multiple lines:{hidden}
クエリを複数行に分割する場合は、行継続文字を使ってください:

{code:java}
def results = Book.findAll("\\\
from Book as b, \\\
     Author as a \\\
where b.author = a and a.surname = ?", ['Smith'])
{code}

{hidden}{note}
Triple-quoted Groovy multiline Strings will NOT work with HQL queries.
{note}{hidden}
{note}
トリプルクォートを使ったGroovyの複数行文字列はHQLクエリではうまく動作しません。
{note}

{hidden}h4. Pagination and Sorting{hidden}
h4. ページングとソート

{hidden}You can also perform pagination and sorting whilst using HQL queries. To do so simply specify the pagination options as a Map at the end of the method call and include an "ORDER BY" clause in the HQL:{hidden}
HQLクエリを使いながら、ページングとソートを行うこともできます。
これには、メソッドの最後の引数にMapとしてページングオプションを指定し、HQLの中に@ORDER BY@節を追加します:

{code:java}
def results =
      Book.findAll("from Book as b where " +
                   "b.title like 'Lord of the%' " +
                   "order by b.title asc",
                   [max: 10, offset: 20])
{code}
