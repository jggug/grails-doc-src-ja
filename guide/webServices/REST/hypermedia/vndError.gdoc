{hidden}[Vnd.Error|https://github.com/blongden/vnd.error] is a standardised way of expressing an error response. {hidden}
[Vnd.Error|https://github.com/blongden/vnd.error]はエラーレスポンスの表現方法を標準化したものです。

{hidden}By default when a validation error occurs when attempting to POST new resources then the errors object will be sent back allow with a 422 respond code:{hidden}
デフォルトでは、新しいリソースをPOSTする際にバリデーションエラーが発生した場合、エラーオブジェクトが422のレスポンスコードで送り返されます:

{code}
$ curl -i -H "Accept: text/json"  -H "Content-Type: text/json" -X POST -d "" http://localhost:8080/myapp/books

HTTP/1.1 422 Unprocessable Entity
Server: Apache-Coyote/1.1
Content-Type: text/json;charset=ISO-8859-1

{"errors":[{"object":"rest.test.Book","field":"title","rejected-value":null,"message":"Property [title] of class [class rest.test.Book] cannot be null"}]}
{code}

{hidden}If you wish to change the format to Vnd.Error then simply register @grails.rest.render.errors.VndErrorJsonRenderer@ bean in @grails-app/conf/spring/resources.groovy@:{hidden}
もしフォーマットをVnd.Errorへ変更したい場合は、@grails-app/conf/spring/resources.groovy@の中に@grails.rest.render.errors.VndErrorJsonRenderer@ビーンを単に登録します:


{code}

beans = {
    vndJsonErrorRenderer(grails.rest.render.errors.VndErrorJsonRenderer)
    // for Vnd.Error XML format
    vndXmlErrorRenderer(grails.rest.render.errors.VndErrorXmlRenderer)
}
{code}

{hidden}Then if you alter the client request to accept Vnd.Error you get an appropriate response:{hidden}
そして、Vnd.Errorを受け入れるようにクライアントのリクエストを変更すると、次のようにレスポンスを得られます:

{code}
$ curl -i -H "Accept: application/vnd.error+json,text/json" -H "Content-Type: text/json" -X POST -d "" http://localhost:8080/myapp/books
HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Type: application/vnd.error+json;charset=ISO-8859-1

[
    {
        "logref": "\"book.nullable\"",
        "message": "Property [title] of class [class rest.test.Book] cannot be null",
        "_links": {
            "resource": {
                "href": "http://localhost:8080/rest-test/books"
            }
        }
    }
]
{code}
