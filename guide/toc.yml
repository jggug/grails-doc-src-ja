introduction:
  title: イントロダクション
  whatsNew23: Grails 2.3の新機能
  whatsNew22: Grails 2.2の新機能
  whatsNew21: Grails 2.1の新機能
  whatsNew:
    title: Grails 2.0の新機能
    developmentEnvironmentFeatures: 開発環境機能
    coreFeatures: コア機能
    webFeatures: Web機能
    persistenceFeatures: 永続化機能
    testingFeatures: テスト機能
gettingStarted:
  title: スタートガイド
  requirements: インストール必要条件
  downloadingAndInstalling: ダウンロードとインストール
  creatingAnApplication: アプリケーション作成
  aHelloWorldExample: ハローワールド例
  usingInteractiveMode: インタラクティブモードの利用
  ide: IDEの設定
  conventionOverConfiguration: Convention over Configuration 設定より規約
  runningAnApplication: アプリケーションの起動
  testingAnApplication: アプリケーションのテスト
  deployingAnApplication: アプリケーションのデプロイ
  supportedJavaEEContainers: サポートされている Java EE コンテナ
  generatingAnApplication: アプリケーション生成
  creatingArtefacts: アーテファクトの作成
upgradingFromPreviousVersionsOfGrails: Grails下位バージョンからの更新
conf:
  title: 設定
  config:
    title: 基本設定
    builtInOptions: 組込オプション
    logging: ロギング
    configGORM: GORM
  environments: 環境
  dataSource:
    title: データソース
    dataSourcesAndEnvironments: データソースと環境
    JNDIDataSources: JNDI データソース
    automaticDatabaseMigration: 自動データベースマイグレーション
    transactionAwareDataSourceProxy: Transaction-awareデータソースプロキシ
    databaseConsole: データベースコンソール
    multipleDatasources: 複数データソース
  configExternalized: 設定の外部化
  versioning: バージョニング
  docengine: プロジェクト・ドキュメント
  dependencyResolution:
    title: 依存性解決
    configurationsAndDependencies: 設定と依存
    dependencyRepositories: 依存管理リポジトリ
    debuggingResolution: 依存解決デバッグ
    inheritedDependencies: 依存の受け継ぎ
    providingDefaultDependencies: 基本依存管理の提供
    changingDependencies: スナップショットと他の変化する依存関係
    dependencyReports: 依存管理レポート
    pluginJARDependencies: プラグインJAR依存
    mavenIntegration: Maven統合
    mavendeploy: Mavenリポジトリへのデプロイ
    pluginDependencies: プラグイン依存管理
    dependencyResolutionCaching: 依存管理のキャッシュ
commandLine:
  title: コマンドライン
  interactiveMode: インタラクティブモード
  forkedMode: フォーク実行
  creatingGantScripts: Gantスクリプトの作成
  reusingGrailsScripts: Grailsスクリプトの再利用
  events: イベントを取得する
  buildCustomising: ビルドのカスタマイズ
  antAndMaven: AntとMaven
  wrapper: Grailsラッパー
GORM:
  title: O/Rマッピング (GORM)
  quickStartGuide:
    title: クイックスタートガイド
    basicCRUD: 基本CRUD
  domainClasses:
    title: GORMでのドメインモデリング
    gormAssociation:
      title: GORMでの関連
      manyToOneAndOneToOne: 多対1、1対1 (Many-to-One, One-to-one)
      oneToMany: 1対多 (One-to-many)
      manyToMany: 多対多 (Many-to-many)
      basicCollectionTypes: 基本コレクション型
    gormComposition: GORMでのコンポジション
    inheritanceInGORM: GORMでの継承
    sets,ListsAndMaps: セット、リスト、マップ
  persistenceBasics:
    title: 永続化の基礎
    savingAndUpdating: 保存と更新
    deletingObjects: オブジェクトの削除
    cascades: カスケード更新削除を理解する
    fetching: EagerフェッチとLazyフェッチ
    locking: 悲観的ロックと楽観的ロック
    modificationChecking: 変更確認
  querying:
    title: GORMでのクエリー
    finders: ダイナミックファインダー
    whereQueries: Whereクエリー
    criteria: クライテリア
    detachedCriteria: Detachedクライテリア
    hql: Hibernateクエリー言語 (HQL)
  advancedGORMFeatures:
    title: 高度なGORMの機能
    eventsAutoTimestamping: イベントと自動タイムスタンプ
    ormdsl:
      title: O/Rマッピングのカスタマイズ
      tableAndColumnNames: テーブル名、カラム名
      caching: キャッシングストラテジ
      inheritanceStrategies: 継承ストラテジ
      identity: データベース識別子のカスタマイズ
      compositePrimaryKeys: 複合主キー
      databaseIndices: データベースインデックス
      optimisticLockingAndVersioning: 楽観的ロックとバージョニング
      fetchingDSL: EagerフェッチとLazyフェッチ
      customCascadeBehaviour: カスケードの振る舞いを変える
      customHibernateTypes: Hibernateのカスタム型
      derivedProperties: 派生プロパティ
      customNamingStrategy: 命名規則のカスタマイズ
    defaultSortOrder: デフォルトソート順
  programmaticTransactions: プログラマチックトランザクション
  gormConstraints: GORMと制約
theWebLayer:
  title: Webレイヤ
  controllers:
    title: コントローラ
    understandingControllersAndActions: コントローラとアクションの理解
    controllersAndScopes: コントローラとスコープ
    modelsAndViews: モデルとビュー
    redirectsAndChaining: リダイレクトとチェイン
    interceptors: コントローラ・インターセプター
    dataBinding: データバインディング
    xmlAndJSON: XMLとJSONのレスポンス
    moreOnJSONBuilder: JSONBuilder (JSONビルダー)
    uploadingFiles: ファイルアップロード
    commandObjects: コマンドオブジェクト
    formtokens: フォーム二重送信のハンドリング
    typeConverters: シンプルタイプコンバータ
  gsp:
    title: Groovyサーバーページ
    GSPBasics:
      title: GSPの基本
      variablesAndScopes: 変数とスコープ
      logicAndIteration: ロジックとイテレーション
      pageDirectives: ページディレクティブ
      expressions: エクスプレッション
    tags:
      title: GSPタグ
      tagVariablesAndScopes: 変数とスコープ
      tagLogicAndIteration: ロジックとイテレーション
      searchAndFiltering: 検索とフィルタリング
      linksAndResources: リンクとリソース
      formsAndFields: フォームとフィールド
      tagsAsMethodCalls: タグをメソッドとして使用
    viewsAndTemplates: ビューとテンプレート
    layouts: Sitemeshでレイアウト
    resources:
      title: 静的リソース
      includingResourcesUsingTheResourceTags: リソースタグでのリソースの使用
      otherResourceTags: 他のリソースタグ
      declaringResources: リソースの宣言
      overridingPluginResources: プラグインリソースのオーバーライド
      optimizingYourResources: リソースの最適化
      debugging: デバッグ
      preventingProcessingOfResources: リソース生成・変換処理を防ぐ
      otherResourcesPlugins: リソース関連のプラグイン
    sitemeshContentBlocks: Sitemeshコンテントブロック
    makingChangesToADeployedApplication: デプロイされたアプリケーションへの変更
    GSPDebugging: GSPデバッグ
  taglibs:
    title: タグライブラリ
    taglibVariablesAndScopes: 変数とスコープ
    simpleTags: 簡単なタグ
    logicalTags: 制御タグ
    iterativeTags: イテレートタグ
    namespaces: タグネームスペース
    usingJSPTagLibraries: JSPタグライブラリの使用
    tagReturnValue: タグの戻り値
  urlmappings:
    title: URLマッピング
    mappingToControllersAndActions: コントローラとアクションにマッピング
    restfulMappings: RESTリソースへのマッピング
    embeddedVariables: 埋込変数
    mappingToViews: ビューへマッピング
    mappingToResponseCodes: レスポンスコードへマッピング
    mappingHTTP: HTTPメソッドへマッピング
    mappingWildcards: マッピングワイルドカード
    automaticLinkRewriting: 自動リンクリライト
    applyingConstraints: 制約の適用
    namedMappings: 名前付きURLマッピング
    customizingUrlFormat: URLフォーマットのカスタマイズ
    namespacedControllers: コントローラネームスペース
  webflow:
    title: Webフロー
    startAndEndStates: 開始と終了のステート
    actionStatesAndViewStates: アクションステートとビューステート
    flowExecutionEvents: フロー実行イベント
    flowScopes: フローのスコープ
    dataBindingAndValidation: データバインディングとバリデーション
    subflowsAndConversations: サブフローとの対話
  filters:
    title: フィルタ
    applyingFilters: フィルタの適用
    filterTypes: フィルタの種類
    filterVariablesAndScopes: 変数とスコープ
    filterDependencies: フィルタ依存関係
  ajax:
    title: Ajax
    ajaxSupport:
      title: Ajax対応
      remotingLinking: リモートリンク
      updatingContent: コンテンツの更新
      remoteFormSubmission: リモートフォーム送信
      ajaxEvents: Ajaxイベント
    ajaxWithPrototype: Prototypeを使用したAjax
    ajaxWithDojo: Dojoを使用したAjax
    ajaxWithGWT: GWTを使用したAjax
    ajaxOnTheServer: Ajax使用時のサーバサイド
  contentNegotiation: コンテントネゴシエーション
webServices:
  title: Webサービス
  REST: 
    title: REST
    domainResources: RESTリソースとしてドメインクラスを使用する
    urlMappings: RESTリソースへのマッピング
    linkingToResources: RESTリソースへのリンク
    versioningResources: RESTリソースのバージョニング
    restfulControllers:
      title: RESTコントローラの実装
      extendingRestfulController: RestfulControllerスーパークラスの拡張
      restControllersStepByStep: RESTコントローラの実装ステップバイステップ
      generatingRestControllers: スカッフォルドを使用してRESTコントローラを生成
    renderers: 
      title: レスポンスレンダリングのカスタマイズ
      defaultRenderers: デフォルトレンダラーのカスタマイズ
      objectMarshallers: カスタムオブジェクトマーシャラの登録
      namedObjectMarshallers: オブジェクト・マーシャラの名前付き定義
      objectMarshallerInterface: ObjectMarshallerインターフェイスへの実装
      customRenderers: カスタムレンダラーの実装
      gspRenderers: GSPを使用したカスタムレンダリング
    hypermedia: 
      title: Hypermediaをアプリケーションステートのエンジンにする
      hal: HALサポート
      atom: Atomサポート
      vndError: Vnd.Errorサポート
    binding: リソースバインディングのカスタマイズ
  SOAP: SOAP
  RSSAndAtom: RSSとAtom
async:
  title: 非同期プログラミング
  promises: Promises
  asyncGorm: 非同期GORM
  asyncRequests: 非同期リクエストハンドリング
  grailsEvents: GrailsイベントAPI
  asyncServletApi: Servlet 3.0 Async
validation:
  title: バリデーション
  constraints: 制約を宣言
  validatingConstraints: 制約をバリデートする
  sharingConstraints: 制約をクラス間で共有する
  validationOnTheClient: クライアントサイドバリデーション
  validationAndInternationalization: バリデーションの国際化
  validationNonDomainAndCommandObjectClasses: コマンドオブジェクト、ドメインクラス以外のバリデーション
services:
  title: サービスレイヤー
  declarativeTransactions:
    title: 断定的なトランザクション
    transactionsRollbackAndTheSession: トランザクションロールバックとセッション
  scopedServices: サービスのスコープ
  dependencyInjectionServices: 依存注入とサービス
  usingServicesFromJava: Javaからサービスを使う
testing:
  title: テスト
  unitTesting:
    title: ユニットテスト
    unitTestingControllers: コントローラのユニットテスト
    unitTestingTagLibraries: タグライブラリのユニットテスト
    unitTestingDomains: ドメインのユニットテスト
    unitTestingFilters: フィルタのユニットテスト
    unitTestingURLMappings: URLマッピングのユニットテスト
    mockingCollaborators: コラボレータのモック化
    mockingCodecs: コーデックのモック化
  integrationTesting: インテグレーションテスト
  functionalTesting: ファンクショナルテスト
i18n:
  title: 国際化
  understandingMessageBundles: メッセージバンドルを理解する
  changingLocales: ロケールの変更
  readingMessages: メッセージ読込
  scaffoldingAndI18n: スカッフォルドとi18n
security:
  title: セキュリティ
  securingAgainstAttacks: 攻撃からの防御
  xssPrevention: クロスサイトスクリプティング(XSS)防御
  codecs: エンコード・デコードオブジェクト
  authentication: 認証
  securityPlugins:
    title: セキュリティプラグイン
    springSecurity: Spring Security
    shiro: Shiro
plugins:
  title: プラグイン
  creatingAndInstallingPlugins: プラグインの作成とインストール
  repositories: プラグインリポジトリ
  understandingPluginStructure: プラグイン構造を理解する
  providingBasicArtefacts: 基本アーティファクトの提供
  evaluatingConventions: 規約の評価
  hookingIntoBuildEvents: ビルドイベントのフック
  hookingIntoRuntimeConfiguration: ランタイム設定へのフック
  addingDynamicMethodsAtRuntime: 実行時のダイナミックメソッド追加
  participatingInAutoReloadEvents: 自動リロードイベントへの参加
  understandingPluginLoadOrder: プラグインのロード順を理解する
  artefactApi:
    title: アーテファクトAPI
    queryingArtefacts: 使用可能なアーテファクトの検索
    customArtefacts: アーテファクト型の追加
  binaryPlugins: バイナリープラグイン
spring:
  title: GrailsとSpring
  theUnderpinningsOfGrails: Grailsの土台
  springdslAdditional: 追加ビーンを定義する
  springdsl: ビーンDSLでSpringランタイム
  theBeanBuilderDSLExplained: ビーンビルダーDSLの解説
  propertyPlaceholderConfiguration: プロパティプレースホルダ設定
  propertyOverrideConfiguration: プロパティオーバーライド設定
hibernate:
  title: GrailsとHibernate
  usingHibernateXMLMappingFiles: Hibernate XMLマッピングの使用
  mappingWithHibernateAnnotations: Hibernateアノテーションでのマッピング
  addingConstraints: 制約の追加
scaffolding: スカッフォルド
deployment: デプロイ
contributing:
  title: Grailsに貢献する
  issues: JIRAに課題をリポート(バグ報告)
  build: ソースからビルドしてテストを走らせる
  patchesCore: Grailsコアにパッチを送る
  patchesDoc: Grailsドキュメントにパッチを送る
traslateReport: 翻訳レポート
